name: Deploy Node.js app with Express and Socket.io

on:
  # Ejecuta el workflow cuando haya cambios en la rama "main"
  push:
    branches: ["main"]

  # Permite ejecutar manualmente este workflow desde la pestaña "Actions"
  workflow_dispatch:

jobs:
  # Job para construir y ejecutar la aplicación
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configurar la última versión estable de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Utiliza la última versión LTS disponible de Node.js

      # Cachear los módulos de node para mejorar el rendimiento
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Instalar dependencias
      - name: Install dependencies
        run: npm ci # `npm ci` es más rápido y fiable para entornos CI que `npm install`

      # Ejecutar pruebas (opcional)
      - name: Run tests
        run: npm test

      # Construir la aplicación (si es necesario)
      - name: Build app
        run: npm run build

      # Iniciar la aplicación (esto solo sirve para pruebas locales, no en producción)
      - name: Start app
        run: npm run start

      # Subir al repositorio de GitHub Pages (si tienes una página que mostrar)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./cliente  # Directorio donde se encuentra el contenido a desplegar en GitHub Pages
